source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/readcsv_template.R', echo=TRUE)
dataset
source('~/R/readcsv_template.R', echo=TRUE)
source('~/R/bachelor_opdracht.R', echo=TRUE)
bachelor
plot(bachelor)
plot(bachelor[,1])
plot(bachelor[,1], bachelor[,2])
plot(bachelor[,2])
source('~/R/bachelor_opdracht.R', echo=TRUE)
source('~/R/bachelor_opdracht.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Libary("RPostgreSQL")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
1
a<- 5
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dbcon <- dbConnect("housing")
source('~/.active-rstudio-document', echo=TRUE)
dbcon <- dbConnect(drv, dbname = "SQLoefeningR",
host = "localhost", port = 5432,
user = "postgres", password = "password")
dbcon <- dbConnect(drv, dbname = "SQLoefeningenR",
host = "localhost", port = 5432,
user = "postgres", password = "password")
source('~/.active-rstudio-document', echo=TRUE)
workingdir <- C:\Users\simcha\Documents\R
workingdir <- ("C:\Users\simcha\Documents\R")
source('~/.active-rstudio-document', echo=TRUE)
workingdir <- c("C:\Users\simcha\Documents\R")
source('~/R/bachelor_opdracht.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
housing
dbWriteTable(con, "housing", housing)
dbWriteTable(dbcon, "housing", housing)
help dbWriteTable()
help(dbWriteTable())
help(dbWriteTable
)
dbWriteTable(dbcon, "housing", housing)
dbWriteTable(dbcon, "housing", housing, append = TRUE)
dbWriteTable(dbcon, "housing", housing)
dbWriteTable(dbcon, "housing", housing, append = FALSE, row.names = FALSE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dbWriteTable(dbcon, "housing", housing, append = FALSE, row.names = FALSE)
dbWriteTable(dbcon, "housing", housing, append = FALSE, row.names = FALSE)
dbDisconnect(dbcon)
df <- source(DF2DB("housing", "password"))
source('~/.active-rstudio-document', echo=TRUE)
df <- DB2DF("housing", "password")
source('~/.active-rstudio-document', echo=TRUE)
conn <- dbConnection(drv, tablename,  host = "localhost", port ="5432",
username = "postgre", password = password)
source('~/R/DB2DF.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dbWriteTable(dbcon, "housing", housing, append = FALSE, row.names = FALSE)
if dbExistsTable(dbcon, "housing")
if (dbExistsTable(dbcon, "housing"))
dbWriteTable(dbcon, "housing", housing, append = FALSE, row.names = FALSE)
dbExistsTable(dbcon, "housing")
source('~/.active-rstudio-document', echo=TRUE)
if ! (dbExistsTable(dbcon, "housing"))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
if (FALSE  & (dbExistsTable(dbcon, "housing")))
dbWriteTable(dbcon, "housing", housing, append = FALSE, row.names = FALSE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
highprices <- df[df[price]>=750000]
df
highprices <- df[df[,"price"]>=750000]
df
df[,"price"]>=750000
df[df[,"price"]>=750000]
highprices
source('~/.active-rstudio-document', echo=TRUE)
df
highprices <- df[df[,"price"]>=75000]
df[,"price"]>=75000
df[df[,"price"]>=75000]
highprices <- df[df[,"price"]>=750000]
highprices <- df[df[,"price"]>=75000]
source('~/.active-rstudio-document', echo=TRUE)
dbDisconnect(dbcon)
dbDisconnect(dbcon)
dbDisconnect(dbcon)
dbDisconnect(dbcon)
source('~/.active-rstudio-document', echo=TRUE)
dbDisconnect(conn)
df <- DB2DF("SQLoefeningenR", "housing", "password")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dbDisconnect(conn)
dbcon <- dbConnect(drv, dbname = "SQLoefeningenR",
host = "localhost", port = 5432,
user = "postgres", password = "password")
dbUnloadDriver(drv)
dbUnloadDriver(drv)
dbUnloadDriver(drv)
source('~/.active-rstudio-document', echo=TRUE)
dbUnloadDriver(drv)
dbListConnections(drv)
dbDisconnect(dbListConnections())
dbDisconnect(dbListConnections(drv ))
dbListConnections()
dbListConnections(drv)
dbDisconnect(dbListConnections(drv)[1])
dbDisconnect(dbListConnections(drv)(1))
dbcon <- dbConnect(drv, dbname = "SQLoefeningenR",
host = "localhost", port = 5432,
user = "postgres", password = "password")
source('~/.active-rstudio-document', echo=TRUE)
dbDisconnect(PostgreSQLConnection)
dbDisconnect(<PostgreSQLConnection>)
dbListConnections(drv)
library("RPostgreSQL")
dbListConnections()
drv <- dbDriver("PostgreSQL")
dbListConnections(drv)
source('~/R/postgreSQL.R', echo=TRUE)
source('~/R/SQLoefeningenR.R', echo=TRUE)
dbcon
dbListConnections()
dbListConnections(drv)
isClass(dbcon)
dbcon
dbDisconnect(dbcon)
nocon <- dbDisconnect(dbcon)
nocon
dbListConnections()
dbListConnections(drv)
temp <- dbDisconnect(dbcon)
source('~/R/SQLoefeningenR.R', echo=TRUE)
source('~/R/SQLoefeningenR.R', echo=TRUE)
dbListConnections()
dbListConnections(drv)
temp <- dbDisconnect(dbcon)
dbListConnections()
dbListConnections(drv)
temp <- dbDisconnect(dbListConnections(drv))
temp <- dbDisconnect(dbListConnections(drv)[1])
temp <- dbDisconnect(dbcon
)
dbListConnections(drv)
temp <- dbDisconnect(dbcon)
dbListConnections(drv)
temp <- dbDisconnect(conn )
temp <- dbDisconnect(conn)
temp <- dbDisconnect(dbcon)
dbListConnections(drv)
test = dbListConnections(drv)[1]
test
as.vector(test)
test <- as.vector(test)
test
dbDisconnect(test)
dbcon
class(dbcon)
source('~/R/SQLoefeningenR.R', echo=TRUE)
dbListConnections(drv)
class(dbListConnections(drv                        ))
class(dbListConnections(drv))
class(dbListConnections(drv)[1])
source('~/R/SQLoefeningenR.R', echo=TRUE)
dbListConnections(    drv)
dbListConnections(drv)
dbDisconnect(dbcon)
highprices <- df[df[,"price"]>=75000,]
temp <- dbDisconnect(dbcon)
dbListConnections(drv)
temp <- dbDisconnect(dbcon)
dbListConnections(drv)
temp <- dbDisconnect(conn)
temp <- dbUnloadDriver(drv)
source('~/R/SQLoefeningenR.R', echo=TRUE)
temp <- dbDisconnect(conn)
temp <- dbDisconnect(dbcon)
dbListConnections(drv)
length(dbListConnections(drv))
source('~/R/SQLoefeningenR.R', echo=TRUE)
source('~/R/SQLoefeningenR.R', echo=TRUE)
source('~/R/SQLoefeningenR.R', echo=TRUE)
dbcon
source('~/R/SQLoefeningenR.R', echo=TRUE)
df <- DB2DF("SQLoefeningenR", "housing", "password")
source('~/R/SQLoefeningenR.R', echo=TRUE)
source('~/R/SQLoefeningenR.R', echo=TRUE)
source('~/R/SQLoefeningenR.R', echo=TRUE)
source('~/R/SQLoefeningenR.R', echo=TRUE)
source('~/R/SQLoefeningenR.R', echo=TRUE)
source('~/R/SQLoefeningenR.R', echo=TRUE)
source('~/R/SQLoefeningenR.R', echo=TRUE)
source('~/R/SQLoefeningenR.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
cat('/014')
cat('/014')
cat('\014')
source('~/.active-rstudio-document', echo=TRUE)
cor(x,y, method="pearson")
source('~/R/SQLoefeningenR.R', echo=TRUE)
highprices
source('~/R/SQLoefeningenR.R', echo=TRUE)
dbListConnections(drv)
three_bedrooms
source('C:/Users/simcha/Dropbox/TW2/Samenvattingen/Periode 2/Data Analyse/R/Correlatie.R', echo=TRUE)
source('C:/Users/simcha/Dropbox/TW2/Samenvattingen/Periode 2/Data Analyse/R/tukey_test1.R', echo=TRUE)
source('C:/Users/simcha/Dropbox/TW2/Samenvattingen/Periode 2/Data Analyse/R/Lineairregressie_enkelv.R', echo=TRUE)
cat('\014')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
model
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
qqnorm(y,x)
qqnorm(y,x)
source('~/.active-rstudio-document', echo=TRUE)
qqnorm(resid(model))
qqline(model)
source('~/.active-rstudio-document', echo=TRUE)
help("dbConnect")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dbListConnections(drv )
source('~/.active-rstudio-document', echo=TRUE)
workingdir
bachelor
workingdir <- c("C:/Users/simcha/Documents/R")
filename <- paste(workingdir, "bachelor.csv", sep = '/')
bachelor <- read.csv(filename, sep = ';')
bachelor
colnames(bachelor)
paste("1,2,3,4,",colnames(bachelor))
paste("1,2,3,4,",colnames(bachelor)[1])
paste("1,2,3,4,",colnames(bachelor)[1],colnames(bachelor)[2])
paste("1,2,3,4,",colnames(bachelor)[1:4])
class(colnames(bachelor))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
df
source('~/.active-rstudio-document', echo=TRUE)
debugSource('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
debugSource('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
dbDisconnect(conn)
dbUnloadDriver(drv)
debugSource('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
paste("
CREATE TABLE bachelor(",colnames(bachelor)[1],",",colnames(bachelor)[2],","
,colnames(bachelor)[3],",",colnames(bachelor)[4],")
")
paste(
"CREATE TABLE bachelor(",colnames(bachelor)[1],",",colnames(bachelor)[2],","
,colnames(bachelor)[3],",",colnames(bachelor)[4],")"
)
debugSource('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
db
df
temp
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
temp
all_means <- mean(df)
mean(df[,1])
df
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
dbDisconnect(conn)
dbUnloadDriver(drv)
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
dbDisconnect(conn)
dbUnloadDriver(drv)
dbDisconnect(conn)
dbUnloadDriver(drv)
dbDisconnect(conn)
dbUnloadDriver(drv)
dbListConnections(drv)
dbDisconnect(conn)
dbDisconnect(conn)
dbDisconnect(conn)
dbDisconnect(conn)
dbDisconnect(conn)
dbDisconnect(conn)
dbDisconnect(conn)
dbListConnections(drv)
dbDisconnect(conn)
dbListConnections(drv)
dbDisconnect(conn)
dbListConnections(drv)
dbListConnections(drv)
dbUnloadDriver(drv)
dbDisconnect(conn)
dbListConnections(drv)
dbDisconnect(conn)
dbListConnections(drv)
dbDisconnect(conn)
dbListConnections(drv)
dbDisconnect(conn)
dbListConnections(drv)
size(df)
dim(df)
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
dbDisconnect(conn)
dbListConnections(drv)
dbUnloadDriver(drv)
all_mean <- colMeans(df,dim(df)[1], dim(df)[2])
all_mean <- colMeans(df)
class(df)
df
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
dbDisconnect(conn)
dbListConnections(drv)
dbUnloadDriver(drv)
all_mean <- mean(df)
all_mean <- mean(df[])
all_mean <- mean(df[,])
all_mean <- mean(df[,1])
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
class(df[,1])
df[,]
class(df[,])
class(df[,1])
class(df[,1:6])
class(df[,1:3])
as.numeric(df[,1])
drv <- dbDriver("PostgreSQL")
conn <- dbConnect(drv, dbname = "SQLoefeningenR",host = 'localhost', port = 5432, user = 'postgres', password = 'password')
dbRemoveTable(conn,bachelor)
dbRemoveTable(conn,"bachelor")
dbDisconnect(conn)
dbListConnections(drv)
dbUnloadDriver(drv)
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
df
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
dbDisconnect(conn)
all_mean<- c()
for (i in 1:dim(df)[2]){
all_mean[i] <- mean(df[,i])
}
dbDisconnect(conn)
dbListConnections(drv)
source('~/R/Formatieve toets DA3 wk 18.R', echo=TRUE)
df
z <- qnorm(alpha)
alpha <- 0.05
all_mean<- c()
for (i in 1:dim(df)[2]){
all_mean[i] <- mean(df[,i])
xbar <- all_mean[i]
s <- sd(df[,i])
z <- qnorm(alpha)
LB <- xbar -z*s
}
z <- qnorm(alpha)
z
xbar <- mean(df[,'selectief'])
s <- sd(df[,'selectief'])
z <- qnorm(alpha)
LB <- xbar +z*s
UB <- xbar -z*s
LB,UB
print(LB,UB)
print(LB)
print(UB)
xbar
print(LB)
xbar
print(UB)
print(table(LB,xbar,UB))
print(c(LB,xbar,UB))
dbDisconnect(conn)
dbListConnections(drv)
dbUnloadDriver(drv)
df
xbar <- mean(df[,'zeer selectief'])
s <- sd(df[,'zeer selectief'])
xbar <- mean(df[,'zeer_selectief'])
s <- sd(df[,'zeer_selectief'])
z <- qnorm(alpha)
LB <- xbar +z*s
UB <- xbar -z*s
print(c(LB,xbar,UB))
s
T <- (xbar-4)/s
T
cat('\014')
rm(list = ls())
filename <- paste(workingdir, "data housing.csv", sep = "askeboelie")
workingdir <- "C:/Users/simcha/Documents/R/"
filename <- paste(workingdir, "data housing.csv", sep = "askeboelie")
filename <- paste(workingdir, "data housing.csv", sep = " ")
filename <- paste(workingdir, "data housing.csv")
df
source('~/.active-rstudio-document', echo=TRUE)
df
dbListConnections(drv)
dbUnloadDriver(drv)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(highprices)
View(highprices)
View(highprices)
View(highprices)
dbDisconnect(conn)
dbUnloadDriver(drv)
dbDisconnect(conn)
dbDisconnect(conn)
dbDisconnect(conn)
dbDisconnect(conn)
dbDisconnect(conn)
dbDisconnect(conn)
dbDisconnect(conn)
dbDisconnect(conn)
dbDisconnect(conn)
dbDisconnect(conn)
dbUnloadDriver(drv)
source('C:/Users/simcha/Downloads/3.1 logistische regressie.R', echo=TRUE)
install.packages("plotROC")
source('C:/Users/simcha/Downloads/3.1 logistische regressie.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
cat('\014')
source('~/.active-rstudio-document', echo=TRUE)
summary(model)
model
model.formula
model.extract()
model.matrix()
exp(1)
b0 <- -1.334
b1 = 0.064
exp(b0 + b1 * 18)/(1+exp(b0 + b1 * 18))
exp(b0 + b1 * x)/(1+exp(b0 + b1 * x))
getwd()
library(readxl)
library(readxl)
install.packages("readxl")
library(readxl)
library(readxl)
require(readxl)
BostonHousing <- read.csv("BostonHousingData.csv", sep = ";")
BostonHousing <- read.csv("BostonHousingData.csv", sep = ";")
read.csv("BostonHousingData.csv")
read.csv("BostonHousingData.csv", sep = ";")
getSrcDirectory()
getwd()
setwd(getwd() + "Tau Omega/Projecten/Predictive Analystics")
getwd() + "Tau Omega/Projecten/Predictive Analystics"
strcat(getwd(),"Tau Omega/Projecten/Predictive Analystics")
"t"+"p"
paste(getwd(),"Tau Omega/Projecten/Predictive Analystics")
paste(getwd(),"/Tau Omega/Projecten/Predictive Analystics", sep = "")
setwd(paste(getwd(),"/Tau Omega/Projecten/Predictive Analystics", sep = ""))
read.csv(filename, sep = ";")
path <- "/Tau Omega/Projecten/Predictive Analystics"
filename = paste(path, "BostonHousingData.csv", sep = "")
read.csv(filename, sep = ";")
path <- "/Tau Omega/Projecten/Predictive Analystics/"
filename = paste(path, "BostonHousingData.csv", sep = "")
read.csv(filename, sep = ";")
path <- "/Tau Omega/Projecten/Predictive Analytics/"
filename = paste(path, "BostonHousingData.csv", sep = "")
read.csv(filename, sep = ";")
shiny::runApp('C:/Users/simcha/OneDrive - Office 365 Fontys/Tau Omega/Projecten/Shiny-Tutorial/11 Submit button')
runApp('C:/Users/simcha/OneDrive - Office 365 Fontys/Tau Omega/Projecten/Shiny-Tutorial/11 Submit button')
setwd("C:/Users/simcha/OneDrive - Office 365 Fontys/Tau Omega/Projecten/Shiny-Tutorial/11 Submit button")
runApp()
shiny::runApp()
runApp()
runApp()
runApp('C:/Users/simcha/OneDrive - Office 365 Fontys/Tau Omega/Projecten/Shiny-Tutorial/07 Tabs')
runApp('C:/Users/simcha/OneDrive - Office 365 Fontys/Tau Omega/Projecten/Shiny-Tutorial/12 Dynamic UI')
install.packages("writexl")
runApp('C:/Users/simcha/OneDrive - Office 365 Fontys/Tau Omega/Projecten/Shiny-Tutorial/12 Dynamic UI')
